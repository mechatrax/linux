name: Pi kernel build

on:
  pull_request:
    paths-ignore:
      - '.github/**'
    branches: [ "mtx-*" ]
  push:
    paths-ignore:
      - '.github/**'
    branches: [ "mtx-*" ]
  workflow_dispatch:

env:
  NUM_JOBS: 3

jobs:

  build-bcmrpi:

    runs-on: ubuntu-latest

    steps:
    - name: Update install
      run:
        sudo apt-get update

    - name: Install toolchain
      run:
        sudo apt-get install gcc-arm-linux-gnueabihf
      timeout-minutes: 5

    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
        clean: true

    - name: Build kernel
      run: |
        mkdir ${{github.workspace}}/build
        make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- O=${{github.workspace}}/build bcmrpi_defconfig
        scripts/config --file ${{github.workspace}}/build/.config --set-val CONFIG_WERROR y
        make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- O=${{github.workspace}}/build -j ${{env.NUM_JOBS}} zImage modules dtbs
        mkdir -p ${{github.workspace}}/install/boot/overlays
        make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- O=${{github.workspace}}/build INSTALL_MOD_PATH=${{github.workspace}}/install modules_install
        cp ${{github.workspace}}/build/arch/arm/boot/dts/*.dtb ${{github.workspace}}/install/boot/
        cp ${{github.workspace}}/build/arch/arm/boot/dts/overlays/*.dtb* ${{github.workspace}}/install/boot/overlays/
        cp ${{github.workspace}}/arch/arm/boot/dts/overlays/README ${{github.workspace}}/install/boot/overlays/
        cp ${{github.workspace}}/build/arch/arm/boot/zImage ${{github.workspace}}/install/boot/kernel.img
        mkdir -p ${{github.workspace}}/install/extra
        cp ${{github.workspace}}/build/System.map ${{github.workspace}}/install/extra/System.map
        cp ${{github.workspace}}/build/Module.symvers ${{github.workspace}}/install/extra/Module.symvers
        strings ${{github.workspace}}/build/vmlinux | grep "^Linux version" > ${{github.workspace}}/install/extra/uname_string
        git show -s --format=%H > ${{github.workspace}}/install/extra/git_hash

    - name: Tar build
      run: tar -cvf bcmrpi_build.tar -C ${{github.workspace}}/install .

    - name: Upload results
      uses: actions/upload-artifact@v3
      with:
        name: bcmrpi_build
        path: bcmrpi_build.tar

  build-bcm2709:

    runs-on: ubuntu-latest

    steps:
    - name: Update install
      run:
        sudo apt-get update

    - name: Install toolchain
      run:
        sudo apt-get install gcc-arm-linux-gnueabihf
      timeout-minutes: 5

    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
        clean: true

    - name: Build kernel
      run: |
        mkdir ${{github.workspace}}/build
        make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- O=${{github.workspace}}/build bcm2709_defconfig
        scripts/config --file ${{github.workspace}}/build/.config --set-val CONFIG_WERROR y
        make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- O=${{github.workspace}}/build -j ${{env.NUM_JOBS}} zImage modules dtbs
        mkdir -p ${{github.workspace}}/install/boot/overlays
        make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- O=${{github.workspace}}/build INSTALL_MOD_PATH=${{github.workspace}}/install modules_install
        cp ${{github.workspace}}/build/arch/arm/boot/dts/*.dtb ${{github.workspace}}/install/boot/
        cp ${{github.workspace}}/build/arch/arm/boot/dts/overlays/*.dtb* ${{github.workspace}}/install/boot/overlays/
        cp ${{github.workspace}}/arch/arm/boot/dts/overlays/README ${{github.workspace}}/install/boot/overlays/
        cp ${{github.workspace}}/build/arch/arm/boot/zImage ${{github.workspace}}/install/boot/kernel7.img
        mkdir -p ${{github.workspace}}/install/extra
        cp ${{github.workspace}}/build/System.map ${{github.workspace}}/install/extra/System7.map
        cp ${{github.workspace}}/build/Module.symvers ${{github.workspace}}/install/extra/Module7.symvers
        strings ${{github.workspace}}/build/vmlinux | grep "^Linux version" > ${{github.workspace}}/install/extra/uname_string7
        git show -s --format=%H > ${{github.workspace}}/install/extra/git_hash

    - name: Tar build
      run: tar -cvf bcm2709_build.tar -C ${{github.workspace}}/install .

    - name: Upload results
      uses: actions/upload-artifact@v3
      with:
        name: bcm2709_build
        path: bcm2709_build.tar

  build-bcm2711:

    runs-on: ubuntu-latest

    steps:
    - name: Update install
      run:
        sudo apt-get update

    - name: Install toolchain
      run:
        sudo apt-get install gcc-arm-linux-gnueabihf
      timeout-minutes: 5

    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
        clean: true

    - name: Build kernel
      run: |
        mkdir ${{github.workspace}}/build
        make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- O=${{github.workspace}}/build bcm2711_defconfig
        scripts/config --file ${{github.workspace}}/build/.config --set-val CONFIG_WERROR y
        make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- O=${{github.workspace}}/build -j ${{env.NUM_JOBS}} zImage modules dtbs
        mkdir -p ${{github.workspace}}/install/boot/overlays
        make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- O=${{github.workspace}}/build INSTALL_MOD_PATH=${{github.workspace}}/install modules_install
        cp ${{github.workspace}}/build/arch/arm/boot/dts/*.dtb ${{github.workspace}}/install/boot/
        cp ${{github.workspace}}/build/arch/arm/boot/dts/overlays/*.dtb* ${{github.workspace}}/install/boot/overlays/
        cp ${{github.workspace}}/arch/arm/boot/dts/overlays/README ${{github.workspace}}/install/boot/overlays/
        cp ${{github.workspace}}/build/arch/arm/boot/zImage ${{github.workspace}}/install/boot/kernel7l.img
        mkdir -p ${{github.workspace}}/install/extra
        cp ${{github.workspace}}/build/System.map ${{github.workspace}}/install/extra/System7l.map
        cp ${{github.workspace}}/build/Module.symvers ${{github.workspace}}/install/extra/Module7l.symvers
        strings ${{github.workspace}}/build/vmlinux | grep "^Linux version" > ${{github.workspace}}/install/extra/uname_string7l
        git show -s --format=%H > ${{github.workspace}}/install/extra/git_hash

    - name: Tar build
      run: tar -cvf bcm2711_build.tar -C ${{github.workspace}}/install .

    - name: Upload results
      uses: actions/upload-artifact@v3
      with:
        name: bcm2711_build
        path: bcm2711_build.tar

  build-bcm2711-arm64:

    runs-on: ubuntu-latest

    steps:
    - name: Update install
      run:
        sudo apt-get update

    - name: Install toolchain
      run:
        sudo apt-get install gcc-arm-linux-gnueabihf
      timeout-minutes: 5

    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
        clean: true

    - name: Install toolchain
      run:
        sudo apt-get install gcc-aarch64-linux-gnu
      timeout-minutes: 5

    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
        clean: true

    - name: Build kernel
      run: |
        mkdir ${{github.workspace}}/build
        make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- O=${{github.workspace}}/build bcm2711_defconfig
        scripts/config --file ${{github.workspace}}/build/.config --set-val CONFIG_WERROR y
        make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- O=${{github.workspace}}/build -j ${{env.NUM_JOBS}} Image.gz modules dtbs
        mkdir -p ${{github.workspace}}/install/boot/overlays
        make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- O=${{github.workspace}}/build INSTALL_MOD_PATH=${{github.workspace}}/install modules_install
        cp ${{github.workspace}}/build/arch/arm64/boot/dts/broadcom/*.dtb ${{github.workspace}}/install/boot/
        cp ${{github.workspace}}/build/arch/arm64/boot/dts/overlays/*.dtb* ${{github.workspace}}/install/boot/overlays/
        cp ${{github.workspace}}/arch/arm64/boot/dts/overlays/README ${{github.workspace}}/install/boot/overlays/
        cp ${{github.workspace}}/build/arch/arm64/boot/Image.gz ${{github.workspace}}/install/boot/kernel8.img
        mkdir -p ${{github.workspace}}/install/extra
        cp ${{github.workspace}}/build/System.map ${{github.workspace}}/install/extra/System8.map
        cp ${{github.workspace}}/build/Module.symvers ${{github.workspace}}/install/extra/Module8.symvers
        strings ${{github.workspace}}/build/vmlinux | grep "^Linux version" > ${{github.workspace}}/install/extra/uname_string8
        git show -s --format=%H > ${{github.workspace}}/install/extra/git_hash

    - name: Tar build
      run: tar -cvf bcm2711_arm64_build.tar -C ${{github.workspace}}/install .

    - name: Upload results
      uses: actions/upload-artifact@v3
      with:
        name: bcm2711_arm64_build
        path: bcm2711_arm64_build.tar
